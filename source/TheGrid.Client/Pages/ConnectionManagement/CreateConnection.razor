@page "/Connections/Create"
@using System.ComponentModel.DataAnnotations;

<RadzenTemplateForm TItem="CreateConnectionRequest" Data="_input" Submit="CreateConnectionAsync">
    <RadzenRow Gap="2rem">
        <RadzenColumn>
            <RadzenStack>
                <RadzenFormField Text="Name">
                    <RadzenTextBox Name="Name" @bind-Value="_input.Name" AutoComplete=false/>
                    <RadzenRequiredValidator Component="Name" Popup/>
                    <RadzenLengthValidator Component="Name" Max="100" Popup/>
                </RadzenFormField>
                <RadzenFormField Text="connector" Variant="Variant.Outlined">
                    <RadzenDropDown Name="QueryRunnerId" TValue="string" ValueChanged="QueryRunnerChanged" Value="_input.ConnectorId" Context="x" Data="_queryRunners" ValueProperty="@nameof(Connector.Id)" TextProperty="@nameof(Connector.Name)">
                        <Template>
                            @{
                                if (x is Connector runner)
                                {
                                    <ConnectorDisplay Name="@runner.Name" ConnectorIcon="@runner.RunnerIcon" />
                                }
                            }
                        </Template>
                    </RadzenDropDown>
                    <RadzenRequiredValidator Component="QueryRunnerId" Text="A connector must be selected" Popup />
                </RadzenFormField>
                @if (_selectedQueryRunner != null)
                {
                    foreach (var parameter in _selectedQueryRunner.Parameters.OrderBy(p => p.RenderOrder))
                    {
                        <ConnectionPropertyEditor ConnectionProperty="parameter" ValueChanged="ParameterValueChanged" />
                    }
                }
            </RadzenStack>
        </RadzenColumn>
    </RadzenRow>
    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Center" Gap="1rem" class="rz-mt-8 rz-mb-4">
        <RadzenButton Text="Cancel" ButtonType="ButtonType.Button" ButtonStyle=ButtonStyle.Light Icon="cancel" Click="@(() => NavigationManager.NavigateTo("/Connections"))" />
        <RadzenButton Text="Save" ButtonType="ButtonType.Submit" Icon="save" />
    </RadzenStack>
</RadzenTemplateForm>