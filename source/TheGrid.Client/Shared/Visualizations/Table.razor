@inherits VisualizationComponent

<RadzenDataGrid Data="_data"
                TItem="Dictionary<string, object>"
                Count="_totalItems"
                LoadData="OnLoadDataAsync"
                IsLoading="_isLoading"
                AllowPaging="true"
                Style="height: 100%;"
                PageSize="15"
                AllowSorting="false"
                Density="Density.Compact"
                ColumnResized="OnColumnResize"
                ColumnReordered="OnColumnReorderedAsync"
                AllowColumnReorder="@(!ReadOnly)"
                AllowColumnResize="@(!ReadOnly)">
    <Columns>
        @{
            var options = GetOptions();

            foreach (var kv in options.Where(c => c.Value.Visible).OrderBy(c => c.Value.DisplayOrder))
            {
                @if (Columns != null)
                {
                    var valueType = Columns[kv.Key].Type;
                    <RadzenDataGridColumn TItem="Dictionary<string, object>"
                                          Title="@(kv.Value.DisplayName ?? kv.Key)"
                                          Type="@GetTypeForColumnType(valueType)"
                                          Property="@kv.Key">
                        <Template>
                            @if (valueType == QueryResultColumnType.Text || kv.Value.DisplayFormat == null)
                            {
                                @context[kv.Key]
                            }
                            else
                            {
                                var value = context[kv.Key];

                                if (value != null)
                                {
                                    if (valueType == QueryResultColumnType.DateTime && value is DateTime dateTimeValue)
                                    {
                                        @dateTimeValue.ToString(kv.Value.DisplayFormat)
                                    }
                                    else if (valueType is QueryResultColumnType.Integer or QueryResultColumnType.Long && value is long longValue)
                                    {
                                        @longValue.ToString(kv.Value.DisplayFormat)
                                    }
                                    else if (valueType is QueryResultColumnType.Integer && value is int intValue)
                                    {
                                        @intValue.ToString(kv.Value.DisplayFormat)
                                    }
                                    else
                                    {
                                        @value
                                    }
                                }
                            }
                        </Template>
                    </RadzenDataGridColumn>
                }
            }
        }
    </Columns>
</RadzenDataGrid>