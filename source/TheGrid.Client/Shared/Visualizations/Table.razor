@inherits VisualizationComponent

@*
    Do an initial data fetch so we can build the columns and show a somewhat meaningful loading indicator
*@

<RadzenDataGrid
    Data="_data"
    TItem="Dictionary<string, object>"
    Count="_totalItems"
    LoadData="OnLoadDataAsync"
    IsLoading="_isLoading"
    AllowPaging
    Style="height: 100%;"
    PageSize="15"
    AllowSorting="false"
    Density="Density.Compact"
    ColumnResized="OnColumnResize"
    ColumnReordered="OnColumnReorderedAsync"
    AllowColumnReorder="@(!ReadOnly)"
    AllowColumnResize="@(!ReadOnly)">
    <Columns>
        @{
            var options = GetOptions();

            foreach (var kv in options.Where(c => c.Value.Visible).OrderBy(c => c.Value.DisplayOrder))
            {
                <RadzenDataGridColumn
                    TItem="Dictionary<string, object>"
                    Title="@(kv.Value.DisplayName ?? kv.Key)"
                    Type="@GetTypeForColumnType(kv.Value.Type)"
                    Property="@kv.Key">
                    <Template>
                        @if (kv.Value.Type == QueryResultColumnType.Text || kv.Value.DisplayFormat == null)
                        {
                            @context[kv.Key]
                        }
                        else
                        {
                            var value = context[kv.Key];

                            if (value != null)
                            {
                                if (kv.Value.Type == QueryResultColumnType.DateTime && value is DateTime dateTimeValue)
                                {
                                    @dateTimeValue.ToString(kv.Value.DisplayFormat)
                                }
                                else if (kv.Value.Type is QueryResultColumnType.Integer or QueryResultColumnType.Long && value is long longValue)
                                {
                                    @longValue.ToString(kv.Value.DisplayFormat)
                                }
                                else
                                {
                                    @value
                                }
                            }
                        }
                    </Template>
                </RadzenDataGridColumn>
            }
        }
    </Columns>
</RadzenDataGrid>